apply plugin: 'com.android.application'

android {
    buildToolsVersion '28.0.3'
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.azhariharisalhamdi.ODIR5K"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
//        ndk {
//            abiFilters "armeabi-v7a", "arm64-v8a"
//        }
    }
    buildTypes {
        release {
            lintOptions {
                disable 'MissingTranslation'
                checkReleaseBuilds false
                abortOnError false
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//        debug {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }

    project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2]

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(
                            com.android.build.OutputFile.ABI), 0) * 10000000 + android.defaultConfig.versionCode
        }
    }
//
//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }
}

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from:'download.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha04'

    // Build off of nightly TensorFlow Lite
    implementation('org.tensorflow:tensorflow-lite:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-support:0.0.0-nightly') { changing = true }
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':opencv-4.2.0')
    // Use local TensorFlow library
    // implementation 'org.tensorflow:tensorflow-lite-local:0.0.0'

    implementation 'com.android.volley:volley:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'androidx.annotation:annotation:1.1.0'
//    implementation "androidx.core:core-ktx:1.2.0"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.google.firebase:firebase-ml-vision:24.0.2'
    implementation 'com.google.firebase:firebase-ml-vision-object-detection-model:19.0.4'

    api 'com.google.guava:guava:28.2-jre'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
}

apply plugin: 'com.google.gms.google-services'
